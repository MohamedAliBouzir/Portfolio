export const projectsData: Object[] = [
  {
    id: 1,
    projectName: "NOE",
    projectDescription: [
      "ðŸ“ŒDeveloped a Selenium-based script to automate testing of a platform with over 2000 pages, including testing all buttons, fields, pages, and filters automatically.",
      "ðŸ“ŒImplemented automated bug reporting, including code status, location (capturing the error XPath in HTML5), and preparing comprehensive reports.",
      "ðŸ“ŒAutomated testing for page opening errors, non-functional filters, incorrect results, status code errors, redirections, and wrong paths.",
      "ðŸ“ŒOptimized the script's performance by implementing multithreading to reduce rest time between different tests on each page, reducing the testing time from 30 hours to 19 hours.",
      "ðŸ“ŒFurther optimized testing efficiency by implementing multiprocessing to process multiple pages simultaneously, completing all tests in just 25 minutes.",
      "ðŸ“ŒAdded a cron job to start the automated tests automatically twice a day, at 7 am and 6 pm.",
    ],
    highlights: "",
    appliedSkills: [
      "HTML",
      "SVN",
      "MariaDB",
      "Python",
      "Selenium",
      "web-drivers",
    ],
    attached: null,
  },
  {
    id: 2,
    projectName: "Store2000",
    projectDescription: [
      "ðŸ“ŒUtilized Ionic v6, Capacitor v4.0.1, React v17.0.1, TypeScript, Odoo v14, OpenAPI v3.0 and Python, to develop a user-friendly mobile app serving as a mini ERP for the technical team at Store 2000.",
      "ðŸ“ŒDesigned a menu allowing immediate quotation creation for clients, assisting in creating window blinds using available detached pieces, and updating technical staff calendars.",
      "ðŸ“ŒImplemented real-time task management for technical staff, including tracking active, completed, and in-progress tasks.",
      "ðŸ“ŒIntegrated the app with the administration ERP (Odoo) to ensure seamless data synchronization and management.",
      "ðŸ“ŒDeveloped a client data page containing contact information, requests, and necessary work details for client houses.",
      "ðŸ“ŒImplemented a billing system for clients to sign off on quotations, with all data and signatures automatically generating invoices in PDF format for Odoo.",
    ],
    highlights: "",
    appliedSkills: [
      "Ionic",
      "Capacitor",
      "React",
      "Typescript",
      "Odoo - OpenAPI"
    ],
    attached: null,
  },
  {
    id: 3,
    projectName: "Carthage BET",
    projectDescription: [
      "ðŸ“ŒDeveloped user-friendly, responsive interfaces using React, Typescript and clean architecture principles.",
      "ðŸ“ŒImplemented SWR to consume various REST APIs provided by the backend team.",
      "ðŸ“ŒUtilized React best practices, including the HOC design pattern, lazy loading, suspense, memos and callbacks to enhance performance and user experience",
      "ðŸ“ŒResolved performance issues through profiling and optimization techniques to improve the overall speed and responsiveness of the application",
      "ðŸ“ŒDeveloped reusable custom hooks to manage form validation, API calls and local storage operations, improving code modularity and reducing redundancy across the application.",
    ],
    highlights: "",
    appliedSkills: [
        "React",
        "TypeScript",
        "SWR",
        "Socket.io",
        "Lodash"
    ],
    attached: null,
  },
  {
    id: 4,
    projectName: "Elissa BET",
    projectDescription: [
      "ðŸ“ŒDesigned and implemented authentication interfaces, betting nterfaces, general interfaces, sign-up interfaces, real-time casinos, real-time invoices and real-time match tracking and results interfaces.",
      "ðŸ“ŒBuilt custom hooks for complex state management logic such as user authentication and theme switching, ensure better separation of concerns and a cleaner codebase.",
      "ðŸ“ŒOptimized state management with React Context and custom hooks for consistent access to global data (e.g, user profile information) across various components without excessive re-renders.",
      "ðŸ“ŒImproved app performance by minimizing unnecessary re-renders with  efficient context usage and memorization in custom hooks, resulting in a 25% reduction in load times.",
      "ðŸ“ŒMigrated application from REST API consumption using Axios to GraphQL schema with Apollo Client.",
    ],
    highlights: "",
    appliedSkills: [
        "React",
        "TypeScript",
        "Appolo Client",
        "Socket.io",
        "Lodash"
    ],
    attached: null,
  },
  {
    id: 5,
    projectName: "IEEE ISSATSo Student Branch",
    projectDescription: [""],
    highlights: "",
    appliedSkills: [""],
    attached: null,
  },
  {
    id: 6,
    projectName: "DataMigrationMorpher",
    projectDescription: [
      "ðŸ“ŒAutomated Migration: DataMigrationMorpher automates the entire data migration process, eliminating the need for manual intervention. This ensures faster migration times and reduces the risk of human error.",
      "ðŸ“ŒCompatibility: The tool is compatible with a wide range OSs This flexibility allows users to migrate data between different platforms with ease.",
      "ðŸ“ŒData Transformation: D2M includes powerful data transformation capabilities, allowing users to manipulate and transform data during the migration process. This ensures that data is formatted correctly for the destination system.",
      "ðŸ“ŒScalability: Whether migrating a small dataset or a large-scale enterprise migration, D2M is designed to scale according to the user's needs. Its robust architecture ensures that it can handle even the most complex tasks.",
      "ðŸ“ŒReal-time Monitoring: The tool provides real-time monitoring of the migration process, allowing users to track progress and identify any issues that may arise. This ensures that migrations are completed successfully and on time.",
      "ðŸ“ŒReporting: Upon completion of a migration, D2M generates detailed reports that provide insights into the migration process. This includes information on the number of records migrated, any errors encountered, and the overall success rate of the migration.",
      "ðŸ“ŒConceptualized and developed D2M from inception to deployment, incorporating custom data mappings, transformation rules, and error handling mechanisms.",
      "ðŸ“ŒImplemented a robust and scalable architecture for D2M, ensuring optimal performance and flexibility for users.",
      "ðŸ“ŒProvided technical guidance and support to stakeholders, demonstrating a deep understanding of data migration best practices.",
    ],
    highlights: "",
    appliedSkills: [
        "React",
        "TypeScript",
        "Lodash",
        "Socket.io",
        "Python",
        "Pandas",
        "Pydash"
    ],
    attached: null,
  },
  {
    id: 7,
    projectName: "Sultan",
    projectDescription: [
      "ðŸ“ŒImplemented Google translate API for automatic language translation, enhancing accessibility for international users.",
      "ðŸ“ŒDeveloped custom components and responsive user interfaces using React, Typescript and Redux.",
      "ðŸ“ŒDeveloped high-performance components following best practices to ensure maintainability, scalability and responsiveness, in close collaboration with the design team.",
      "ðŸ“ŒIdentified and resolved bugs to ensure application stability and a smooth user experience.",
      "ðŸ“ŒImplemented SEO using React Helmet in collaboration with the marketing team to improve visibility and search rankings.",
    ],
    highlights: "",
    appliedSkills: [
        "React",
        "TypeScript",
        "Axios",
        "Socket.io",
        "Nodejs",
        "Expressjs",
        "PostgreSQL",
        "JavaScript",
    ],
    attached: null,
  },
  {
    id: 8,
    projectName: "Aladin",
    projectDescription: [
      "ðŸ“ŒDesigned new PostgreSQL models to optimize the database structure and improve data handling efficiency",
      "ðŸ“ŒBuilt high-performance APIs that handle storage efficiently and are resistant to spam and malicious traffic.",
      "ðŸ“ŒDeveloped a new admin role with custom interfaces to provide granular access control and improve administrative workflows",
      "ðŸ“ŒResolved performance issues through profiling and optimization techniques to improve the overall speed and responsiveness of the application.",
      "ðŸ“ŒDeveloped custom components and user interfaces using React, Typescript and Redux, ensuring responsiveness, scalability and maintainability.",
      "ðŸ“ŒDesigned and developed custom skeletons and layouts for each landing page to enhance the user experience and page load performance.",
    ],
    highlights: "",
    appliedSkills: [
        "React",
        "TypeScript",
        "Axios",
        "Socket.io",
        "Nodejs",
        "Expressjs",
        "PostgreSQL",
    ],
    attached: null,
  },
];
